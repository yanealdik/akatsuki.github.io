import React, { useState } from 'react';
import "./Footer.css";
import Logo from "../../assets/images/akat.png";
import Inst from "../../assets/images/Instagram.svg";
import Tik from "../../assets/images/Tiktok.svg";
import Tg from "../../assets/images/Telegram.svg";
import { TELEGRAM_API_URL, TELEGRAM_CHAT_ID } from "./telegramconfig";

const cities = [
    "–ö–æ—Å—Ç–∞–Ω–∞–π", "–õ–æ–Ω–¥–æ–Ω","–ü–∞–≤–ª–æ–¥–∞—Ä", "–ö–æ—Å—Ç–∞-–†–∏–∫–∞", "–ü–∞—Ä–∏–∂", "–ë–µ—Ä–ª–∏–Ω", "–ú–∞–¥—Ä–∏–¥", "–†–∏–º", "–ê–º—Å—Ç–µ—Ä–¥–∞–º", "–°—Ç–æ–∫–≥–æ–ª—å–º", "–í–µ–Ω–∞", 
    "–ü—Ä–∞–≥–∞", "–ë—É–¥–∞–ø–µ—à—Ç", "–í–∞—Ä—à–∞–≤–∞", "–ê—Ñ–∏–Ω—ã", "–•–µ–ª—å—Å–∏–Ω–∫–∏", "–ö–æ–ø–µ–Ω–≥–∞–≥–µ–Ω", "–ë—Ä—é—Å—Å–µ–ª—å", 
    "–î—É–±–ª–∏–Ω", "–õ–∏—Å—Å–∞–±–æ–Ω", "–ë—É—Ö–∞—Ä–µ—Å—Ç", "–ë–µ–ª–≥—Ä–∞–¥", "–°–æ—Ñ–∏—è", "–í–∏–ª—å–Ω—é—Å", "–†–∏–≥–∞", "–¢–∞–ª–ª–∏–Ω", 
    "–ë–∏—à–∫–µ–∫", "–ê—Å—Ç–∞–Ω–∞", "–¢–±–∏–ª–∏—Å–∏", "–î—É—à–∞–Ω–±–µ", "–ü–µ–∫–∏–Ω", "–¢–æ–∫–∏–æ", "–°–µ—É–ª", "–®–∞–Ω—Ö–∞–π", 
    "–ì–æ–Ω–∫–æ–Ω–≥", "–°–∏–Ω–≥–∞–ø—É—Ä", "–î—É–±–∞–π", "–ë–∞–Ω–≥–∫–æ–∫", "–ù—å—é-–î–µ–ª–∏", "–¢–µ–≥–µ—Ä–∞–Ω", "–°—Ç–∞–º–±—É–ª", "–ê–Ω–∫–∞—Ä–∞",
    "–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥", "–ö–∞–∑–∞–Ω—å", "–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫", "–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥", "–†–æ—Å—Ç–æ–≤-–Ω–∞-–î–æ–Ω—É", 
    "–°–∞–º–∞—Ä–∞", "–ù–∏–∂–Ω–∏–π –ù–æ–≤–≥–æ—Ä–æ–¥", "–ß–µ–ª—è–±–∏–Ω—Å–∫", "–û–º—Å–∫", "–í–æ–ª–≥–æ–≥—Ä–∞–¥", "–ê–ª–º–∞—Ç—ã", "–ú–∏–Ω—Å–∫", 
    "–ë–∞–∫—É", "–ï—Ä–µ–≤–∞–Ω", "–¢–∞—à–∫–µ–Ω—Ç", "–ê—à—Ö–∞–±–∞–¥", "–ö–æ–ª–æ–º–±–æ", "–•–æ—à–∏–º–∏–Ω", "–¢–∞–π–±—ç–π", "–ú–∞–∫–∫–∞"
];

const Footer = () => {
  // –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è –ø–æ–ª–µ–π —Ñ–æ—Ä–º—ã
  const [name, setName] = useState("");
  const [phone, setPhone] = useState("");
  const [email, setEmail] = useState("");
  const [loading, setLoading] = useState(false);
  const [success, setSuccess] = useState(false);
  const [error, setError] = useState("");

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã
  const handleSubmit = async (e) => {
    e.preventDefault();
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –ø–æ–ª–µ–π
    if (!name.trim() || !phone.trim()) {
      setError("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –∏–º—è –∏ —Ç–µ–ª–µ—Ñ–æ–Ω");
      return;
    }
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Telegram
    if (!TELEGRAM_API_URL || !TELEGRAM_CHAT_ID) {
      setError("–û—à–∏–±–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Telegram. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏.");
      console.error("Telegram –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç", { 
        API_URL: TELEGRAM_API_URL, 
        CHAT_ID: TELEGRAM_CHAT_ID 
      });
      return;
    }
    
    // –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è Telegram
    const message = `
üîî –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ —Å —Å–∞–π—Ç–∞!
üë§ –ò–º—è: ${name}
üìû –¢–µ–ª–µ—Ñ–æ–Ω: +7${phone}
‚úâÔ∏è Email: ${email || "–ù–µ —É–∫–∞–∑–∞–Ω"}
    `;
    
    try {
      setLoading(true);
      setError("");
      
      // –û—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –≤ Telegram
      const response = await fetch(`${TELEGRAM_API_URL}/sendMessage`, {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({
          chat_id: TELEGRAM_CHAT_ID,
          text: message,
          parse_mode: "HTML"
        }),
      });
      
      if (!response.ok) {
        const errorText = await response.text();
        throw new Error(`–û—à–∏–±–∫–∞ HTTP: ${response.status} - ${errorText}`);
      }
      
      const data = await response.json();
      
      if (data.ok) {
        // –ï—Å–ª–∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ —É—Å–ø–µ—à–Ω–∞
        setSuccess(true);
        // –û—á–∏—Å—Ç–∫–∞ –ø–æ–ª–µ–π
        setName("");
        setPhone("");
        setEmail("");
        
        // –°–±—Ä–æ—Å–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
        setTimeout(() => {
          setSuccess(false);
        }, 5000);
      } else {
        setError(`–û—à–∏–±–∫–∞ API Telegram: ${data.description || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞"}`);
      }
    } catch (err) {
      console.error("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram:", err);
      setError(`–û—à–∏–±–∫–∞: ${err.message || "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏"}`);
    } finally {
      setLoading(false);
    }
  };

  return (
    <div>
      <main className="main-content"></main>
      
      <section className="global-users">
        <h2>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å–æ –≤—Å–µ–≥–æ –º–∏—Ä–∞ !</h2>
        <p>–í–ú–ï–°–¢–ï C <span className="red">AKATSUKI </span>COURSES</p>
        <div className="cities-slider-wrapper">
          <div className="cities-slider">
            {[...cities, ...cities].map((city, index) => (
              <span key={index}>{city}  ‚Ä¢ </span>
            ))}
          </div>
        </div>

        <div className="cities-slider-wrapper">
          <div className="cities-sliderr">
            {[...cities, ...cities].map((city, index) => (
              <span key={index}>{city} ‚Ä¢ </span>
            ))}
          </div>
        </div>
      </section>

      <footer className="footer">
        <div className="footer-form">
          <h2>–û—Å—Ç–∞–ª–∏—Å—å –≤–æ–ø—Ä–æ—Å—ã?</h2>
          <p>
            –ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –±–æ–ª—å—à–µ —É–∑–Ω–∞—Ç—å –æ <span>Akatsuki</span> Courses –∏–ª–∏ –Ω–µ
            –∑–Ω–∞–µ—Ç–µ, –∫–∞–∫—É—é –ø—Ä–æ–≥—Ä–∞–º–º—É –≤—ã–±—Ä–∞—Ç—å, –æ—Å—Ç–∞–≤–ª—è–π—Ç–µ –∑–∞—è–≤–∫—É
          </p>
          
          {success && (
            <div className="success-message">
              –°–ø–∞—Å–∏–±–æ! –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞. –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.
            </div>
          )}
          
          {error && (
            <div className="error-message">
              {error}
            </div>
          )}
          
          <form onSubmit={handleSubmit}>
            <input 
              type="text" 
              placeholder="–ò–º—è" 
              value={name}
              onChange={(e) => setName(e.target.value)}
              required
            />
            
            <div className="input-group">
              <select disabled>
                <option value="kz">üá∞üáø +7</option>
              </select>
              <input 
                type="text" 
                placeholder="–¢–µ–ª–µ—Ñ–æ–Ω" 
                value={phone}
                onChange={(e) => setPhone(e.target.value.replace(/\D/g, ''))}
                required
              />
            </div>
            
            <input 
              type="email" 
              placeholder="–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –ø–æ—á—Ç–∞" 
              value={email}
              onChange={(e) => setEmail(e.target.value)}
            />
            
            <button type="submit" disabled={loading}>
              {loading ? "–û—Ç–ø—Ä–∞–≤–∫–∞..." : "–û—Ç–ø—Ä–∞–≤–∏—Ç—å"}
            </button>
          </form>
        </div>

        <div className="footer-top">
          <div className="footer-logo">
            <img src={Logo} alt="Akatsuki Courses" />
            <p>Akatsuki Courses</p>
          </div>
          <div className="footer-contacts">
            <p>üìû 8 777 953 85 25</p>
            <p> info@akatsukicourses.kz</p>
          </div>
          <div className="footer-socials">
            <a href="https://www.instagram.com/yanealdik/"><img src={Inst} alt="Instagram" /></a>
            <a href="#"><img src={Tik} alt="Tiktok" /></a>
            <a href="#"><img src={Tg} alt="Telegram" /></a>
          </div>
        </div>

        <div className="footer-bottom">
          <p>&copy; 2025 Akatsuki Courses. –í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã.</p>
        </div>
      </footer>
    </div>
  );
};

export default Footer;